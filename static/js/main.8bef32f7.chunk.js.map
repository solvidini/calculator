{"version":3,"sources":["components/Control.js","components/Result.js","utils/corrects.js","utils/calculate.js","containers/Calculator.js","App.js","serviceWorker.js","index.js"],"names":["Control","props","controlClasses","modifier","push","onClick","className","join","title","Result","error","operation","result","n2","n1","addBrackets","sign","operationWithoutBrackets","isBracket","i","length","charAt","includes","substring","slice","negate","lastSign","newOperation","test","replace","Math","abs","RegExp","String","operator","callback","isPercentageMode","round","Number","EPSILON","Error","Calculator","useState","setN1","setN2","setResult","setOperator","setOperation","setLastSign","percentageMode","setPercentageMode","setError","actionHandler","calculate","previousValue","negateResult","err","message","App","target","rel","href","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.8bef32f7.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Control = (props) => {\r\n  const controlClasses = ['calculator__button'];\r\n\r\n  if (props.modifier) {\r\n    controlClasses.push('calculator__button--' + props.modifier);\r\n  }\r\n\r\n  return (\r\n    <div onClick={props.onClick} className={controlClasses.join(' ')}>\r\n      <span>{props.title}</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Control;\r\n","import React from 'react';\r\n\r\nconst Result = (props) => {\r\n  return (\r\n    <div className=\"calculator__result\">\r\n      <div className=\"calculator__operation\">\r\n        {props.error ? props.error : props.operation}\r\n      </div>\r\n      <div className=\"calculator__result-value\">\r\n        {props.result !== null\r\n          ? props.result\r\n          : props.n2\r\n          ? props.n2\r\n          : props.n1}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Result;\r\n","export const addBrackets = (operation, sign) => {\r\n  let operationWithoutBrackets = '';\r\n  let isBracket = false;\r\n\r\n  for (let i = operation.length - 1; i >= 0; i--) {\r\n    if (operation.charAt(i) === ')') isBracket = true;\r\n    if (operation.charAt(i) === '(') {\r\n      isBracket = false;\r\n      continue;\r\n    }\r\n    if (!isBracket) operationWithoutBrackets += operation.charAt(i);\r\n  }\r\n\r\n  if (\r\n    (operationWithoutBrackets.includes('+') ||\r\n      operationWithoutBrackets.includes('-')) &&\r\n    (sign === 'x' || sign === '/')\r\n  ) {\r\n    if (\r\n      operation.charAt(operation.length - 2) === ')' &&\r\n      operation.charAt(operation.length - 1) === '%'\r\n    ) {\r\n      return '(' + operation + ')  ' + sign + ' ';\r\n    }\r\n    if (operation.charAt(operation.length - 2) === ')') {\r\n      return operation + ' ' + sign + ' ';\r\n    }\r\n    return '(' + operation + ')  ' + sign + ' ';\r\n  }\r\n\r\n  if (\r\n    operation.charAt(0) === '-' &&\r\n    operation.charAt(2) === '(' &&\r\n    operation.charAt(operation.length - 2) === ')' &&\r\n    operation.charAt(operation.length - 1) !== '%' &&\r\n    (sign === '+' || sign === '-')\r\n  ) {\r\n    let newOperation =\r\n      operation.substring(3).slice(0, -1) + ' ' + sign + ' ';\r\n    return newOperation;\r\n  }\r\n\r\n  if (\r\n    operation.charAt(0) === '(' &&\r\n    operation.charAt(operation.length - 2) === ')' &&\r\n    operation.charAt(operation.length - 1) !== '%' &&\r\n    (sign === '+' || sign === '-')\r\n  ) {\r\n    let newOperation =\r\n      operation.substring(1).slice(0, -2) + ' ' + sign + ' ';\r\n    return newOperation;\r\n  }\r\n\r\n  return operation + ' ' + sign + ' ';\r\n};\r\n\r\nexport const negate = (operation, lastSign, n2) => {\r\n  let newOperation = operation;\r\n  if (n2) {\r\n    if (/(\\(- \\d+\\))$|(\\(- \\d+.\\d+\\))$/.test(operation)) {\r\n      newOperation = newOperation.replace(\r\n        /(\\(- \\d+\\))$|(\\(- \\d+.\\d+\\))$/,\r\n        `${Math.abs(n2)}`\r\n      );\r\n    } else {\r\n      newOperation = newOperation.replace(\r\n        new RegExp(String(n2) + '$'),\r\n        `(- ${Math.abs(n2)})`\r\n      );\r\n    }\r\n    return newOperation;\r\n  }\r\n  if (\r\n    lastSign === '/' ||\r\n    lastSign === 'x' ||\r\n    lastSign === '-' ||\r\n    lastSign === '+' ||\r\n    (lastSign === '.' && operation.charAt(operation.length - 1) === '.')\r\n  ) {\r\n    if (lastSign === '.') {\r\n      newOperation = newOperation.slice(0, -1);\r\n    } else {\r\n      newOperation = newOperation.slice(0, -3);\r\n    }\r\n  }\r\n  if (\r\n    newOperation.includes('+') ||\r\n    newOperation.includes('-') ||\r\n    newOperation.includes('x') ||\r\n    newOperation.includes('/')\r\n  ) {\r\n    newOperation = '- (' + newOperation + ')';\r\n    return newOperation;\r\n  }\r\n  return '- ' + newOperation;\r\n};\r\n","export default (n1, n2, operator, callback, isPercentageMode) => {\r\n  let result;\r\n  if (isPercentageMode) {\r\n    if (operator === '+') {\r\n      result = +n1 + (n2 / 100) * n1;\r\n      result =\r\n        Math.round((result + Number.EPSILON) * 1000000000) / 1000000000;\r\n    } else if (operator === '-') {\r\n      result = +n1 - (n2 / 100) * n1;\r\n      result =\r\n        Math.round((result + Number.EPSILON) * 1000000000) / 1000000000;\r\n    } else if (operator === 'x') {\r\n      result = +n1 * (n2 / 100);\r\n      result =\r\n        Math.round((result + Number.EPSILON) * 1000000000) / 1000000000;\r\n    } else if (operator === '/') {\r\n      if (Number(n2) === 0) {\r\n        throw new Error('Cannot divide by 0!');\r\n      }\r\n      result = +n1 / (n2 / 100);\r\n      result =\r\n        Math.round((result + Number.EPSILON) * 1000000000) / 1000000000;\r\n    }\r\n  } else if (n2 !== null && operator) {\r\n    switch (operator) {\r\n      case '/':\r\n        if (Number(n2) === 0) {\r\n          throw new Error('Cannot divide by 0!');\r\n        }\r\n        result =\r\n          +Math.round((+n1 / +n2 + Number.EPSILON) * 1000000000) /\r\n          1000000000;\r\n        break;\r\n      case 'x':\r\n        result =\r\n          +Math.round((+n1 * +n2 + Number.EPSILON) * 1000000000) /\r\n          1000000000;\r\n        break;\r\n      case '-':\r\n        result =\r\n          +Math.round((+n1 - +n2 + Number.EPSILON) * 1000000000) /\r\n          1000000000;\r\n        break;\r\n      case '+':\r\n      default:\r\n        result =\r\n          +Math.round((+n1 + +n2 + Number.EPSILON) * 1000000000) /\r\n          1000000000;\r\n    }\r\n  }\r\n  callback(result);\r\n};\r\n","import React, { useState } from 'react';\r\n\r\nimport Control from '../components/Control';\r\nimport Result from '../components/Result';\r\nimport { addBrackets, negate } from '../utils/corrects';\r\nimport calculate from '../utils/calculate';\r\n\r\nconst Calculator = (props) => {\r\n  const [n1, setN1] = useState('0');\r\n  const [n2, setN2] = useState(null);\r\n  const [result, setResult] = useState(null);\r\n  const [operator, setOperator] = useState(null);\r\n  const [operation, setOperation] = useState('');\r\n  const [lastSign, setLastSign] = useState(null);\r\n  const [percentageMode, setPercentageMode] = useState(false);\r\n  const [error, setError] = useState(false);\r\n\r\n  // console.log('n1: ' + n1);\r\n  // console.log('n2: ' + n2);\r\n  // console.log('operator: ' + operator);\r\n  // console.log('result: ' + result);\r\n  // console.log('last sign: ' + lastSign);\r\n  // console.log('Percentage mode: ' + percentageMode);\r\n  // console.log('------------------');\r\n\r\n  const actionHandler = (sign) => {\r\n    try {\r\n      switch (sign) {\r\n        case '%':\r\n          // PERCENTAGE\r\n          if (\r\n            !error &&\r\n            operator &&\r\n            n2 !== null &&\r\n            lastSign !== '=' &&\r\n            lastSign !== '%' &&\r\n            lastSign !== '.' &&\r\n            Number(n1) !== 0\r\n          ) {\r\n            calculate(\r\n              n1,\r\n              n2,\r\n              operator,\r\n              (result) => {\r\n                setN1(result);\r\n                setResult(result);\r\n                setPercentageMode(true);\r\n                setOperation((previousValue) => previousValue + '%');\r\n              },\r\n              true\r\n            );\r\n          }\r\n          break;\r\n        case 'N':\r\n          // NEGATE\r\n          let negateResult;\r\n          if (\r\n            lastSign === '/' ||\r\n            lastSign === 'x' ||\r\n            lastSign === '-' ||\r\n            lastSign === '+' ||\r\n            (Number(n2) === 0 && operator === '/') ||\r\n            Number(n1) === 0 ||\r\n            error\r\n          ) {\r\n            break;\r\n          }\r\n          if (!result && n2 && n2 !== 0) {\r\n            setN2((previousValue) => previousValue * -1);\r\n            setOperation(negate(operation, lastSign, n2));\r\n            break;\r\n          }\r\n          if (n1 !== 0) {\r\n            if (lastSign === '=' || lastSign === '%') {\r\n              negateResult = n1 * -1;\r\n            } else {\r\n              negateResult =\r\n                calculate(n1, n2, operator, (result) => {\r\n                  return result;\r\n                }) * -1;\r\n            }\r\n            setPercentageMode(false);\r\n            setResult(negateResult);\r\n            setN1(negateResult);\r\n            setOperator(null);\r\n            setN2(null);\r\n            setOperation(negate(operation, lastSign));\r\n          }\r\n          break;\r\n        case 'C':\r\n          // RESET\r\n          setPercentageMode(false);\r\n          setN1('0');\r\n          setN2(null);\r\n          setOperation('');\r\n          setOperator(null);\r\n          setResult(null);\r\n          setError(false);\r\n          break;\r\n        case '.':\r\n          // ADD DECIMAL POINT\r\n          if (\r\n            lastSign === '/' ||\r\n            lastSign === 'x' ||\r\n            lastSign === '-' ||\r\n            lastSign === '+' ||\r\n            operation.charAt(operation.length - 1) === '%'\r\n          ) {\r\n            break;\r\n          }\r\n          if (n1 === '0' || error) {\r\n            setError(false);\r\n            setOperation('0.');\r\n            setN1('0.');\r\n            break;\r\n          }\r\n          if (lastSign === '=') {\r\n            if (String(n1).includes('.')) {\r\n              break;\r\n            }\r\n            setPercentageMode(false);\r\n            setOperation(n1 + '.');\r\n            setN1(n1 + '.');\r\n            setResult(null);\r\n            setN2(null);\r\n            setOperator(null);\r\n            break;\r\n          }\r\n          if (!operator && lastSign !== '.') {\r\n            if (String(n1).includes('.')) {\r\n              break;\r\n            }\r\n            setN1((previousValue) => {\r\n              return previousValue + '.';\r\n            });\r\n            setOperation((previousValue) => {\r\n              return previousValue + sign;\r\n            });\r\n          } else if (operator && lastSign !== '.') {\r\n            if (String(n2).includes('.')) {\r\n              break;\r\n            }\r\n            setN2((previousValue) => {\r\n              if (previousValue === null) {\r\n                return 0;\r\n              }\r\n              return previousValue + '.';\r\n            });\r\n            setOperation((previousValue) => {\r\n              if (\r\n                previousValue.charAt(previousValue.length - 1) === ')'\r\n              ) {\r\n                return previousValue.slice(0, -1) + String(sign) + ')';\r\n              }\r\n              return previousValue + sign;\r\n            });\r\n          }\r\n          break;\r\n        case '=':\r\n          // CALCULATE OPERATION (RESULT)\r\n          if (\r\n            lastSign === '/' ||\r\n            lastSign === 'x' ||\r\n            lastSign === '-' ||\r\n            lastSign === '+' ||\r\n            (!n2 && !operator)\r\n          ) {\r\n            break;\r\n          }\r\n          if (percentageMode) {\r\n            calculate(\r\n              n1,\r\n              n2,\r\n              operator,\r\n              (result) => {\r\n                setN1(result);\r\n                setResult(result);\r\n              },\r\n              true\r\n            );\r\n            if (n2 && n2 < 0) {\r\n              setOperation(\r\n                (previousValue) =>\r\n                  previousValue +\r\n                  ' ' +\r\n                  operator +\r\n                  ' (- ' +\r\n                  Math.abs(n2) +\r\n                  ')%'\r\n              );\r\n            } else {\r\n              setOperation(\r\n                (previousValue) =>\r\n                  previousValue + ' ' + operator + ' ' + n2 + '%'\r\n              );\r\n            }\r\n          } else {\r\n            if (lastSign === '=' && n2) {\r\n              if (n2 < 0) {\r\n                setOperation(\r\n                  (previousValue) =>\r\n                    previousValue +\r\n                    ' ' +\r\n                    operator +\r\n                    ' (- ' +\r\n                    Math.abs(n2) +\r\n                    ')'\r\n                );\r\n              } else {\r\n                setOperation((previousValue) => {\r\n                  return previousValue + ' ' + operator + ' ' + n2;\r\n                });\r\n              }\r\n            }\r\n            if (operation.charAt(operation.length - 1) === '.') {\r\n              setOperation(operation.slice(0, -1));\r\n            }\r\n            if (String(n2).charAt(String(n2).length - 1) === '.') {\r\n              setN2(Number(String(n2).slice(0, -1)));\r\n            }\r\n            calculate(n1, n2, operator, (result) => {\r\n              setN1(result);\r\n              setResult(result);\r\n            });\r\n          }\r\n          break;\r\n        case '/':\r\n        case 'x':\r\n        case '-':\r\n        case '+':\r\n          // OPERATORS\r\n          if (error) {\r\n            break;\r\n          }\r\n          if (n1 === '0') {\r\n            setN1(0);\r\n            setOperator(sign);\r\n            setOperation('0 ' + sign + ' ');\r\n            break;\r\n          }\r\n          if (n2) {\r\n            setN2(null);\r\n          }\r\n\r\n          let newOperation = operation;\r\n          if (operation.charAt(operation.length - 1) === '.') {\r\n            newOperation = operation.slice(0, -1);\r\n          }\r\n          if (\r\n            lastSign === '/' ||\r\n            lastSign === 'x' ||\r\n            lastSign === '-' ||\r\n            lastSign === '+'\r\n          ) {\r\n            newOperation = operation.slice(0, -3);\r\n            setOperation(addBrackets(newOperation, sign));\r\n            setOperator(sign);\r\n            break;\r\n          }\r\n          if (n2 !== null && lastSign !== '=') {\r\n            if (percentageMode) {\r\n              setPercentageMode(false);\r\n            } else {\r\n              calculate(n1, n2, operator, (result) => {\r\n                setN1(result);\r\n                setResult(result);\r\n              });\r\n            }\r\n          }\r\n          setOperator(sign);\r\n          setOperation(addBrackets(newOperation, sign));\r\n          break;\r\n        default:\r\n          // NUMBERS\r\n          if (error) {\r\n            actionHandler('C');\r\n          }\r\n          if (\r\n            ((lastSign === '=' ||\r\n              operation.charAt(operation.length - 1) === '%') &&\r\n              n1 !== '0') ||\r\n            (lastSign === 'N' &&\r\n              operation.charAt(operation.length - 1) === ')' &&\r\n              result !== null)\r\n          ) {\r\n            setOperation(n1 + String(sign));\r\n            setN1(n1 + String(sign));\r\n            setResult(null);\r\n            setN2(null);\r\n            setOperator(null);\r\n            break;\r\n          }\r\n          if (result) {\r\n            setResult(null);\r\n            setN2(sign);\r\n            setOperation((previousValue) => {\r\n              return previousValue + sign;\r\n            });\r\n          } else if (!operator) {\r\n            if (n1 === 0 && lastSign === 0) {\r\n              break;\r\n            }\r\n            setN1((previousValue) => {\r\n              if (previousValue === '0') {\r\n                return sign;\r\n              }\r\n              return previousValue + String(sign);\r\n            });\r\n            setOperation((previousValue) => {\r\n              return previousValue + sign;\r\n            });\r\n          } else if (operator) {\r\n            if (n2 === 0) {\r\n              setN2(sign);\r\n              setOperation((previousValue) => {\r\n                return previousValue.slice(0, -1) + sign;\r\n              });\r\n            } else {\r\n              setN2((previousValue) => {\r\n                if (previousValue === null) {\r\n                  return sign;\r\n                }\r\n                return previousValue + String(sign);\r\n              });\r\n              setOperation((previousValue) => {\r\n                if (\r\n                  previousValue.charAt(previousValue.length - 1) === ')'\r\n                ) {\r\n                  return (\r\n                    previousValue.slice(0, -1) + String(sign) + ')'\r\n                  );\r\n                } else {\r\n                  return previousValue + String(sign);\r\n                }\r\n              });\r\n            }\r\n          }\r\n      }\r\n      // TO PREVENT OPERATOR DUPLICATION IN OPERATIONS\r\n      if (\r\n        ((lastSign === '/' ||\r\n          lastSign === 'x' ||\r\n          lastSign === '-' ||\r\n          lastSign === '+') &&\r\n          sign === '.') ||\r\n        ((lastSign === '/' ||\r\n          lastSign === 'x' ||\r\n          lastSign === '-' ||\r\n          lastSign === '+') &&\r\n          sign === '=') ||\r\n        ((lastSign === '/' ||\r\n          lastSign === 'x' ||\r\n          lastSign === '-' ||\r\n          lastSign === '+') &&\r\n          sign === '%') ||\r\n        ((lastSign === '/' ||\r\n          lastSign === 'x' ||\r\n          lastSign === '-' ||\r\n          lastSign === '+') &&\r\n          sign === 'N')\r\n      ) {\r\n        setLastSign('+');\r\n      } else if (lastSign === '=' && sign === '%') {\r\n        setLastSign('=');\r\n      } else {\r\n        setLastSign(sign);\r\n      }\r\n    } catch (err) {\r\n      setError(err.message);\r\n      setPercentageMode(false);\r\n      setN1('0');\r\n      setN2(null);\r\n      setOperation('');\r\n      setOperator(null);\r\n      setResult(null);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"calculator\">\r\n      <Result\r\n        error={error}\r\n        n1={n1}\r\n        n2={n2}\r\n        result={result}\r\n        operation={operation}\r\n      />\r\n      <div className=\"calculator__controls\">\r\n        <Control\r\n          onClick={() => actionHandler('%')}\r\n          modifier=\"basic\"\r\n          title=\"%\"\r\n        />\r\n        <Control\r\n          onClick={() => actionHandler('N')}\r\n          modifier=\"basic\"\r\n          title={\r\n            <div className=\"negation\">\r\n              <div className=\"negation__up\">+</div>\r\n              <div>/</div>\r\n              <div className=\"negation__down\">-</div>\r\n            </div>\r\n          }\r\n        />\r\n        <Control\r\n          onClick={() => actionHandler('C')}\r\n          modifier=\"basic\"\r\n          title=\"C\"\r\n        />\r\n        <Control\r\n          onClick={() => actionHandler('/')}\r\n          modifier=\"violet-1\"\r\n          title=\"/\"\r\n        />\r\n        <Control\r\n          onClick={() => actionHandler(7)}\r\n          modifier=\"basic\"\r\n          title=\"7\"\r\n        />\r\n        <Control\r\n          onClick={() => actionHandler(8)}\r\n          modifier=\"basic\"\r\n          title=\"8\"\r\n        />\r\n        <Control\r\n          onClick={() => actionHandler(9)}\r\n          modifier=\"basic\"\r\n          title=\"9\"\r\n        />\r\n        <Control\r\n          onClick={() => actionHandler('x')}\r\n          modifier=\"violet-2\"\r\n          title=\"x\"\r\n        />\r\n        <Control\r\n          onClick={() => actionHandler(4)}\r\n          modifier=\"basic\"\r\n          title=\"4\"\r\n        />\r\n        <Control\r\n          onClick={() => actionHandler(5)}\r\n          modifier=\"basic\"\r\n          title=\"5\"\r\n        />\r\n        <Control\r\n          onClick={() => actionHandler(6)}\r\n          modifier=\"basic\"\r\n          title=\"6\"\r\n        />\r\n        <Control\r\n          onClick={() => actionHandler('-')}\r\n          modifier=\"violet-3\"\r\n          title=\"-\"\r\n        />\r\n        <Control\r\n          onClick={() => actionHandler(1)}\r\n          modifier=\"basic\"\r\n          title=\"1\"\r\n        />\r\n        <Control\r\n          onClick={() => actionHandler(2)}\r\n          modifier=\"basic\"\r\n          title=\"2\"\r\n        />\r\n        <Control\r\n          onClick={() => actionHandler(3)}\r\n          modifier=\"basic\"\r\n          title=\"3\"\r\n        />\r\n        <Control\r\n          onClick={() => actionHandler('+')}\r\n          modifier=\"violet-4\"\r\n          title=\"+\"\r\n        />\r\n        <Control\r\n          onClick={() => actionHandler(0)}\r\n          modifier=\"basic\"\r\n          title=\"0\"\r\n        />\r\n        <Control\r\n          onClick={() => actionHandler('.')}\r\n          modifier=\"basic\"\r\n          title=\",\"\r\n        />\r\n        <Control\r\n          onClick={() => actionHandler('=')}\r\n          modifier=\"pink\"\r\n          title=\"=\"\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Calculator;\r\n","import React from 'react';\r\n\r\nimport Calculator from './containers/Calculator';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"app\">\r\n      <Calculator />\r\n      <div className=\"app__caption\">\r\n        Calculator by{' '}\r\n        <a\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n          href=\"http://samuelk.pl/\"\r\n          className=\"link\"\r\n        >\r\n          Samuel Kędziora\r\n        </a>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './sass/main.scss';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}