{"version":3,"sources":["components/Control.js","utils/corrects.js","components/Calculator.js","App.js","serviceWorker.js","index.js"],"names":["Control","props","controlClasses","modifier","push","onClick","className","join","title","addBrackets","operation","sign","includes","charAt","length","substring","slice","negate","lastSign","n2","newOperation","test","console","log","replace","Math","abs","RegExp","String","Calculator","useState","n1","setN1","setN2","result","setResult","operator","setOperator","setOperation","setLastSign","percentageMode","setPercentageMode","error","setError","actionHandler","Number","calculate","previousValue","negateResult","err","message","operatorArg","round","EPSILON","Error","App","target","rel","href","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"kKAgBeA,EAdC,SAACC,GACf,IAAMC,EAAiB,CAAC,sBAMxB,OAJID,EAAME,UACRD,EAAeE,KAAK,uBAAyBH,EAAME,UAInD,yBAAKE,QAASJ,EAAMI,QAASC,UAAWJ,EAAeK,KAAK,MAC1D,8BAAON,EAAMO,SCXNC,EAAc,SAACC,EAAWC,GACrC,OACGD,EAAUE,SAAS,OAAQF,EAAUE,SAAS,MACrC,MAATD,GAAyB,MAATA,EAc0B,MAA3CD,EAAUG,OAAOH,EAAUI,OAAS,IACO,MAA3CJ,EAAUG,OAAOH,EAAUI,OAAS,GAGlCJ,EAAUK,UAAU,GAAGC,MAAM,GAAI,GAAK,IAAML,EAAO,IAGhDD,EAAY,IAAMC,EAAO,IAlBe,MAA3CD,EAAUG,OAAOH,EAAUI,OAAS,IACO,MAA3CJ,EAAUG,OAAOH,EAAUI,OAAS,GAE7B,IAAMJ,EAAY,MAAQC,EAAO,IAEK,MAA3CD,EAAUG,OAAOH,EAAUI,OAAS,GAC/BJ,EAAY,IAAMC,EAAO,IAE3B,IAAMD,EAAY,MAAQC,EAAO,KAa/BM,EAAS,SAACP,EAAWQ,EAAUC,GAC1C,IAAIC,EAAeV,EACnB,OAAIS,GACE,gCAAgCE,KAAKX,IACvCY,QAAQC,KAAI,GACZH,EAAeA,EAAaI,QAC1B,gCADa,UAEVC,KAAKC,IAAIP,MAGdC,EAAeA,EAAaI,QAC1B,IAAIG,OAAOC,OAAOT,GAAM,KADX,aAEPM,KAAKC,IAAIP,GAFF,MAKVC,KAGM,MAAbF,GACa,MAAbA,GACa,MAAbA,GACa,MAAbA,GACc,MAAbA,GAA+D,MAA3CR,EAAUG,OAAOH,EAAUI,OAAS,MAGvDM,EADe,MAAbF,EACaE,EAAaJ,MAAM,GAAI,GAEvBI,EAAaJ,MAAM,GAAI,IAIxCI,EAAaR,SAAS,MACtBQ,EAAaR,SAAS,MACtBQ,EAAaR,SAAS,MACtBQ,EAAaR,SAAS,KAEtBQ,EAAe,MAAQA,EAAe,IAGjC,KAAOA,IC+dDS,EA5hBI,SAAC5B,GAAW,IAAD,EACR6B,mBAAS,KADD,mBACrBC,EADqB,KACjBC,EADiB,OAERF,mBAAS,MAFD,mBAErBX,EAFqB,KAEjBc,EAFiB,OAGAH,mBAAS,MAHT,mBAGrBI,EAHqB,KAGbC,EAHa,OAIIL,mBAAS,MAJb,mBAIrBM,EAJqB,KAIXC,EAJW,OAKMP,mBAAS,IALf,mBAKrBpB,EALqB,KAKV4B,EALU,OAMIR,mBAAS,MANb,mBAMrBZ,EANqB,KAMXqB,EANW,OAOgBT,oBAAS,GAPzB,mBAOrBU,EAPqB,KAOLC,EAPK,OAQFX,oBAAS,GARP,mBAQrBY,EARqB,KAQdC,EARc,KAU5BrB,QAAQC,IAAI,OAASQ,GACrBT,QAAQC,IAAI,OAASJ,GACrBG,QAAQC,IAAI,aAAea,GAC3Bd,QAAQC,IAAI,WAAaW,GACzBZ,QAAQC,IAAI,cAAgBL,GAC5BI,QAAQC,IAAI,oBAAsBiB,GAClClB,QAAQC,IAAI,sBAEZ,IAAMqB,EAAgB,SAACjC,GACrB,IACE,OAAQA,GACN,IAAK,KAGA+B,GACDN,GACO,OAAPjB,GACa,MAAbD,GACa,MAAbA,GACa,MAAbA,GACe,IAAf2B,OAAOd,KAEPe,EAAU,KACVL,GAAkB,GAClBH,GAAa,SAACS,GAAD,OAAmBA,EAAgB,QAElD,MACF,IAAK,IAEH,IAAIC,EACJ,GACe,MAAb9B,GACa,MAAbA,GACa,MAAbA,GACa,MAAbA,GACgB,IAAf2B,OAAO1B,IAA0B,MAAbiB,GACN,IAAfS,OAAOd,IACPW,EAEA,MAEF,IAAKR,GAAUf,GAAa,IAAPA,EAAU,CAC7Bc,GAAM,SAACc,GAAD,OAAoC,EAAjBA,KACzBT,EAAarB,EAAOP,EAAWQ,EAAUC,IACzC,MAES,IAAPY,IAEAiB,EADe,MAAb9B,GAAiC,MAAbA,GACD,EAANa,GAEe,EAAfe,IAEjBL,GAAkB,GAClBN,EAAUa,GACVhB,EAAMgB,GACNX,EAAY,MACZJ,EAAM,MACNK,EAAarB,EAAOP,EAAWQ,KAEjC,MACF,IAAK,IAEHuB,GAAkB,GAClBT,EAAM,KACNC,EAAM,MACNK,EAAa,IACbD,EAAY,MACZF,EAAU,MACVQ,GAAS,GACT,MACF,IAAK,IAEH,GACe,MAAbzB,GACa,MAAbA,GACa,MAAbA,GACa,MAAbA,GAC2C,MAA3CR,EAAUG,OAAOH,EAAUI,OAAS,GAEpC,MAEF,GAAW,MAAPiB,GAAcW,EAAO,CACvBC,GAAS,GACTL,EAAa,MACbN,EAAM,MACN,MAEF,GAAiB,MAAbd,EAAkB,CACpB,GAAIU,OAAOG,GAAInB,SAAS,KACtB,MAEF6B,GAAkB,GAClBH,EAAaP,EAAK,KAClBC,EAAMD,EAAK,KACXI,EAAU,MACVF,EAAM,MACNI,EAAY,MACZ,MAEF,GAAKD,GAAyB,MAAblB,GAUV,GAAIkB,GAAyB,MAAblB,EAAkB,CACvC,GAAIU,OAAOT,GAAIP,SAAS,KACtB,MAEFqB,GAAM,SAACc,GACL,OAAsB,OAAlBA,EACK,EAEFA,EAAgB,OAEzBT,GAAa,SAACS,GACZ,MACqD,MAAnDA,EAAclC,OAAOkC,EAAcjC,OAAS,GAErCiC,EAAc/B,MAAM,GAAI,GAAKY,OAAOjB,GAAQ,IAE9CoC,EAAgBpC,UA1BQ,CACjC,GAAIiB,OAAOG,GAAInB,SAAS,KACtB,MAEFoB,GAAM,SAACe,GACL,OAAOA,EAAgB,OAEzBT,GAAa,SAACS,GACZ,OAAOA,EAAgBpC,KAqB3B,MACF,IAAK,IAEH,GACe,MAAbO,GACa,MAAbA,GACa,MAAbA,GACa,MAAbA,IACEC,IAAOiB,EAET,MAEEI,GACFM,EAAU,KAERR,EADEnB,GAAMA,EAAK,EAEX,SAAC4B,GAAD,OACEA,EACA,IACAX,EACA,OACAX,KAAKC,IAAIP,GACT,MAIF,SAAC4B,GAAD,OACEA,EAAgB,IAAMX,EAAW,IAAMjB,EAAK,QAIjC,MAAbD,GAAoBC,GAEpBmB,EADEnB,EAAK,EAEL,SAAC4B,GAAD,OACEA,EACA,IACAX,EACA,OACAX,KAAKC,IAAIP,GACT,KAGS,SAAC4B,GACZ,OAAOA,EAAgB,IAAMX,EAAW,IAAMjB,IAIL,MAA3CT,EAAUG,OAAOH,EAAUI,OAAS,IACtCwB,EAAa5B,EAAUM,MAAM,GAAI,IAEc,MAA7CY,OAAOT,GAAIN,OAAOe,OAAOT,GAAIL,OAAS,IACxCmB,EAAMY,OAAOjB,OAAOT,GAAIH,MAAM,GAAI,KAEpC8B,KAEF,MACF,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IAEH,GAAIJ,EACF,MAEF,GAAW,MAAPX,EAAY,CACdC,EAAM,GACNK,EAAY1B,GACZ2B,EAAa,KAAO3B,EAAO,KAC3B,MAEEQ,GACFc,EAAM,MAGR,IAAIb,EAAeV,EAInB,GAH+C,MAA3CA,EAAUG,OAAOH,EAAUI,OAAS,KACtCM,EAAeV,EAAUM,MAAM,GAAI,IAGtB,MAAbE,GACa,MAAbA,GACa,MAAbA,GACa,MAAbA,EACA,CACAE,EAAeV,EAAUM,MAAM,GAAI,GACnCsB,EAAa7B,EAAYW,EAAcT,IACvC0B,EAAY1B,GACR6B,EACFC,GAAkB,GAElBK,IAEF,MAES,OAAP3B,GAA4B,MAAbD,IACbsB,EACFC,GAAkB,GAElBK,KAGJT,EAAY1B,GACZ2B,EAAa7B,EAAYW,EAAcT,IACvC,MACF,QAGE,GADA8B,GAAkB,GACdC,EAAO,CACTC,GAAS,GACTL,EAAaV,OAAOjB,IACpBqB,EAAMrB,GACN,MAEF,IACiB,MAAbO,GAC2C,MAA3CR,EAAUG,OAAOH,EAAUI,OAAS,KAC7B,MAAPiB,GACY,MAAbb,GAC4C,MAA3CR,EAAUG,OAAOH,EAAUI,OAAS,IACzB,OAAXoB,EACF,CACAI,EAAaP,EAAKH,OAAOjB,IACzBqB,EAAMD,EAAKH,OAAOjB,IAClBwB,EAAU,MACVF,EAAM,MACNI,EAAY,MACZ,MAEF,GAAIH,EACFC,EAAU,MACVF,EAAMtB,GACN2B,GAAa,SAACS,GACZ,OAAOA,EAAgBpC,UAEpB,GAAKyB,EAaDA,IACE,IAAPjB,GACFc,EAAMtB,GACN2B,GAAa,SAACS,GACZ,OAAOA,EAAc/B,MAAM,GAAI,GAAKL,OAGtCsB,GAAM,SAACc,GACL,OAAsB,OAAlBA,EACKpC,EAEFoC,EAAgBnB,OAAOjB,MAEhC2B,GAAa,SAACS,GACZ,MACqD,MAAnDA,EAAclC,OAAOkC,EAAcjC,OAAS,GAG1CiC,EAAc/B,MAAM,GAAI,GAAKY,OAAOjB,GAAQ,IAGvCoC,EAAgBnB,OAAOjB,YAlChB,CACpB,GAAW,IAAPoB,GAAyB,IAAbb,EACd,MAEFc,GAAM,SAACe,GACL,MAAsB,MAAlBA,EACKpC,EAEFoC,EAAgBnB,OAAOjB,MAEhC2B,GAAa,SAACS,GACZ,OAAOA,EAAgBpC,MAoD7B4B,GArBe,MAAbrB,GACa,MAAbA,GACa,MAAbA,GACa,MAAbA,IACS,MAATP,IACa,MAAbO,GACa,MAAbA,GACa,MAAbA,GACa,MAAbA,IACS,MAATP,IACa,MAAbO,GACa,MAAbA,GACa,MAAbA,GACa,MAAbA,IACS,MAATP,IACa,MAAbO,GACa,MAAbA,GACa,MAAbA,GACa,MAAbA,IACS,MAATP,EAEU,IACU,MAAbO,GAA6B,MAATP,EACjB,IAEAA,GAEd,MAAOsC,GACPN,EAASM,EAAIC,SACbT,GAAkB,GAClBT,EAAM,KACNC,EAAM,MACNK,EAAa,IACbD,EAAY,MACZF,EAAU,QAIRW,EAAY,SAACK,GACjB,IAAIjB,EACJ,GAAoB,MAAhBiB,EAAqB,CACvB,GAAiB,MAAbf,EACFF,GAAUH,EAAMZ,EAAK,IAAOY,EAC5BG,EACET,KAAK2B,MAAkC,KAA3BlB,EAASW,OAAOQ,UAC5B,SACG,GAAiB,MAAbjB,EACTF,GAAUH,EAAMZ,EAAK,IAAOY,EAC5BG,EACET,KAAK2B,MAAkC,KAA3BlB,EAASW,OAAOQ,UAC5B,SACG,GAAiB,MAAbjB,EACTF,EAAgBf,EAAK,KAAXY,EACVG,EACET,KAAK2B,MAAkC,KAA3BlB,EAASW,OAAOQ,UAC5B,SACG,GAAiB,MAAbjB,EAAkB,CAC3B,GAAmB,IAAfS,OAAO1B,GACT,MAAM,IAAImC,MAAM,uBAElBpB,GAAUH,GAAMZ,EAAK,KACrBe,EACET,KAAK2B,MAAkC,KAA3BlB,EAASW,OAAOQ,UAC5B,IAEJrB,EAAME,GACNC,EAAUD,QACL,GAAW,OAAPf,GAAeiB,EACxB,OAAQA,GACN,IAAK,IACH,GAAmB,IAAfS,OAAO1B,GACT,MAAM,IAAImC,MAAM,uBAElBpB,GACGT,KAAK2B,MAAqC,MAA7BrB,GAAMZ,EAAK0B,OAAOQ,UAChC,IACFrB,EAAME,GACNC,EAAUD,GACV,MACF,IAAK,IACHA,GACGT,KAAK2B,MAAqC,MAA7BrB,GAAMZ,EAAK0B,OAAOQ,UAChC,IACFrB,EAAME,GACNC,EAAUD,GACV,MACF,IAAK,IACHA,GACGT,KAAK2B,MAAqC,MAA7BrB,GAAMZ,EAAK0B,OAAOQ,UAChC,IACFrB,EAAME,GACNC,EAAUD,GACV,MACF,IAAK,IACL,QACEA,GACGT,KAAK2B,MAAqC,MAA7BrB,IAAMZ,EAAK0B,OAAOQ,UAChC,IACFrB,EAAME,GACNC,EAAUD,QAGdA,EAASH,EACTI,EAAUJ,GAEZ,OAAOG,GAGT,OACE,yBAAK5B,UAAU,cACb,yBAAKA,UAAU,sBACb,yBAAKA,UAAU,yBACZoC,GAAgBhC,GAEnB,yBAAKJ,UAAU,4BACD,OAAX4B,EAAkBA,EAASf,GAAUY,IAG1C,yBAAKzB,UAAU,wBACb,kBAAC,EAAD,CACED,QAAS,kBAAMuC,EAAc,MAC7BzC,SAAS,QACTK,MAAM,MAER,kBAAC,EAAD,CACEH,QAAS,kBAAMuC,EAAc,MAC7BzC,SAAS,QACTK,MACE,yBAAKF,UAAU,YACb,yBAAKA,UAAU,gBAAf,KACA,kCACA,yBAAKA,UAAU,kBAAf,QAIN,kBAAC,EAAD,CACED,QAAS,kBAAMuC,EAAc,MAC7BzC,SAAS,QACTK,MAAM,MAER,kBAAC,EAAD,CACEH,QAAS,kBAAMuC,EAAc,MAC7BzC,SAAS,WACTK,MAAM,MAER,kBAAC,EAAD,CACEH,QAAS,kBAAMuC,EAAc,IAC7BzC,SAAS,QACTK,MAAM,MAER,kBAAC,EAAD,CACEH,QAAS,kBAAMuC,EAAc,IAC7BzC,SAAS,QACTK,MAAM,MAER,kBAAC,EAAD,CACEH,QAAS,kBAAMuC,EAAc,IAC7BzC,SAAS,QACTK,MAAM,MAER,kBAAC,EAAD,CACEH,QAAS,kBAAMuC,EAAc,MAC7BzC,SAAS,WACTK,MAAM,MAER,kBAAC,EAAD,CACEH,QAAS,kBAAMuC,EAAc,IAC7BzC,SAAS,QACTK,MAAM,MAER,kBAAC,EAAD,CACEH,QAAS,kBAAMuC,EAAc,IAC7BzC,SAAS,QACTK,MAAM,MAER,kBAAC,EAAD,CACEH,QAAS,kBAAMuC,EAAc,IAC7BzC,SAAS,QACTK,MAAM,MAER,kBAAC,EAAD,CACEH,QAAS,kBAAMuC,EAAc,MAC7BzC,SAAS,WACTK,MAAM,MAER,kBAAC,EAAD,CACEH,QAAS,kBAAMuC,EAAc,IAC7BzC,SAAS,QACTK,MAAM,MAER,kBAAC,EAAD,CACEH,QAAS,kBAAMuC,EAAc,IAC7BzC,SAAS,QACTK,MAAM,MAER,kBAAC,EAAD,CACEH,QAAS,kBAAMuC,EAAc,IAC7BzC,SAAS,QACTK,MAAM,MAER,kBAAC,EAAD,CACEH,QAAS,kBAAMuC,EAAc,MAC7BzC,SAAS,WACTK,MAAM,MAER,kBAAC,EAAD,CACEH,QAAS,kBAAMuC,EAAc,IAC7BzC,SAAS,QACTK,MAAM,MAER,kBAAC,EAAD,CACEH,QAAS,kBAAMuC,EAAc,MAC7BzC,SAAS,QACTK,MAAM,MAER,kBAAC,EAAD,CACEH,QAAS,kBAAMuC,EAAc,MAC7BzC,SAAS,OACTK,MAAM,SCngBD+C,MAnBf,WACE,OACE,yBAAKjD,UAAU,OACb,kBAAC,EAAD,MACA,yBAAKA,UAAU,gBAAf,gBACgB,IACd,uBACEkD,OAAO,SACPC,IAAI,sBACJC,KAAK,qBACLpD,UAAU,QAJZ,2BCEYqD,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAjC,GACLpB,QAAQoB,MAAMA,EAAMQ,a","file":"static/js/main.0e454ba8.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Control = (props) => {\r\n  const controlClasses = ['calculator__button'];\r\n\r\n  if (props.modifier) {\r\n    controlClasses.push('calculator__button--' + props.modifier);\r\n  }\r\n\r\n  return (\r\n    <div onClick={props.onClick} className={controlClasses.join(' ')}>\r\n      <span>{props.title}</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Control;\r\n","export const addBrackets = (operation, sign) => {\r\n  if (\r\n    (operation.includes('+') || operation.includes('-')) &&\r\n    (sign === 'x' || sign === '/')\r\n  ) {\r\n    if (\r\n      operation.charAt(operation.length - 2) === ')' &&\r\n      operation.charAt(operation.length - 1) === '%'\r\n    ) {\r\n      return '(' + operation + ')  ' + sign + ' ';\r\n    }\r\n    if (operation.charAt(operation.length - 2) === ')') {\r\n      return operation + ' ' + sign + ' ';\r\n    }\r\n    return '(' + operation + ')  ' + sign + ' ';\r\n  }\r\n  if (\r\n    operation.charAt(operation.length - 2) === ')' &&\r\n    operation.charAt(operation.length - 1) !== '%'\r\n  ) {\r\n    let newOperation =\r\n      operation.substring(1).slice(0, -2) + ' ' + sign + ' ';\r\n    return newOperation;\r\n  }\r\n  return operation + ' ' + sign + ' ';\r\n};\r\n\r\nexport const negate = (operation, lastSign, n2) => {\r\n  let newOperation = operation;\r\n  if (n2) {\r\n    if (/(\\(- \\d+\\))$|(\\(- \\d+.\\d+\\))$/.test(operation)) {\r\n      console.log(true);\r\n      newOperation = newOperation.replace(\r\n        /(\\(- \\d+\\))$|(\\(- \\d+.\\d+\\))$/,\r\n        `${Math.abs(n2)}`\r\n      );\r\n    } else {\r\n      newOperation = newOperation.replace(\r\n        new RegExp(String(n2) + '$'),\r\n        `(- ${Math.abs(n2)})`\r\n      );\r\n    }\r\n    return newOperation;\r\n  }\r\n  if (\r\n    lastSign === '/' ||\r\n    lastSign === 'x' ||\r\n    lastSign === '-' ||\r\n    lastSign === '+' ||\r\n    (lastSign === '.' && operation.charAt(operation.length - 1) === '.')\r\n  ) {\r\n    if (lastSign === '.') {\r\n      newOperation = newOperation.slice(0, -1);\r\n    } else {\r\n      newOperation = newOperation.slice(0, -3);\r\n    }\r\n  }\r\n  if (\r\n    newOperation.includes('+') ||\r\n    newOperation.includes('-') ||\r\n    newOperation.includes('x') ||\r\n    newOperation.includes('/')\r\n  ) {\r\n    newOperation = '- (' + newOperation + ')';\r\n    return newOperation;\r\n  }\r\n  return '- ' + newOperation;\r\n};\r\n","import React, { useState } from 'react';\r\n\r\nimport Control from './Control';\r\nimport { addBrackets, negate } from '../utils/corrects';\r\n\r\nconst Calculator = (props) => {\r\n  const [n1, setN1] = useState('0');\r\n  const [n2, setN2] = useState(null);\r\n  const [result, setResult] = useState(null);\r\n  const [operator, setOperator] = useState(null);\r\n  const [operation, setOperation] = useState('');\r\n  const [lastSign, setLastSign] = useState(null);\r\n  const [percentageMode, setPercentageMode] = useState(false);\r\n  const [error, setError] = useState(false);\r\n\r\n  console.log('n1: ' + n1);\r\n  console.log('n2: ' + n2);\r\n  console.log('operator: ' + operator);\r\n  console.log('result: ' + result);\r\n  console.log('last sign: ' + lastSign);\r\n  console.log('Percentage mode: ' + percentageMode);\r\n  console.log('------------------');\r\n\r\n  const actionHandler = (sign) => {\r\n    try {\r\n      switch (sign) {\r\n        case '%':\r\n          // PERCENTAGE\r\n          if (\r\n            !error &&\r\n            operator &&\r\n            n2 !== null &&\r\n            lastSign !== '=' &&\r\n            lastSign !== '%' &&\r\n            lastSign !== '.' &&\r\n            Number(n1) !== 0\r\n          ) {\r\n            calculate('%');\r\n            setPercentageMode(true);\r\n            setOperation((previousValue) => previousValue + '%');\r\n          }\r\n          break;\r\n        case 'N':\r\n          // NEGATE\r\n          let negateResult;\r\n          if (\r\n            lastSign === '/' ||\r\n            lastSign === 'x' ||\r\n            lastSign === '-' ||\r\n            lastSign === '+' ||\r\n            (Number(n2) === 0 && operator === '/') ||\r\n            Number(n1) === 0 ||\r\n            error\r\n          ) {\r\n            break;\r\n          }\r\n          if (!result && n2 && n2 !== 0) {\r\n            setN2((previousValue) => previousValue * -1);\r\n            setOperation(negate(operation, lastSign, n2));\r\n            break;\r\n          }\r\n          if (n1 !== 0) {\r\n            if (lastSign === '=' || lastSign === '%') {\r\n              negateResult = n1 * -1;\r\n            } else {\r\n              negateResult = calculate() * -1;\r\n            }\r\n            setPercentageMode(false);\r\n            setResult(negateResult);\r\n            setN1(negateResult);\r\n            setOperator(null);\r\n            setN2(null);\r\n            setOperation(negate(operation, lastSign));\r\n          }\r\n          break;\r\n        case 'C':\r\n          // RESET\r\n          setPercentageMode(false);\r\n          setN1('0');\r\n          setN2(null);\r\n          setOperation('');\r\n          setOperator(null);\r\n          setResult(null);\r\n          setError(false);\r\n          break;\r\n        case '.':\r\n          // ADD DECIMAL POINT\r\n          if (\r\n            lastSign === '/' ||\r\n            lastSign === 'x' ||\r\n            lastSign === '-' ||\r\n            lastSign === '+' ||\r\n            operation.charAt(operation.length - 1) === '%'\r\n          ) {\r\n            break;\r\n          }\r\n          if (n1 === '0' || error) {\r\n            setError(false);\r\n            setOperation('0.');\r\n            setN1('0.');\r\n            break;\r\n          }\r\n          if (lastSign === '=') {\r\n            if (String(n1).includes('.')) {\r\n              break;\r\n            }\r\n            setPercentageMode(false);\r\n            setOperation(n1 + '.');\r\n            setN1(n1 + '.');\r\n            setResult(null);\r\n            setN2(null);\r\n            setOperator(null);\r\n            break;\r\n          }\r\n          if (!operator && lastSign !== '.') {\r\n            if (String(n1).includes('.')) {\r\n              break;\r\n            }\r\n            setN1((previousValue) => {\r\n              return previousValue + '.';\r\n            });\r\n            setOperation((previousValue) => {\r\n              return previousValue + sign;\r\n            });\r\n          } else if (operator && lastSign !== '.') {\r\n            if (String(n2).includes('.')) {\r\n              break;\r\n            }\r\n            setN2((previousValue) => {\r\n              if (previousValue === null) {\r\n                return 0;\r\n              }\r\n              return previousValue + '.';\r\n            });\r\n            setOperation((previousValue) => {\r\n              if (\r\n                previousValue.charAt(previousValue.length - 1) === ')'\r\n              ) {\r\n                return previousValue.slice(0, -1) + String(sign) + ')';\r\n              }\r\n              return previousValue + sign;\r\n            });\r\n          }\r\n          break;\r\n        case '=':\r\n          // CALCULATE OPERATION (RESULT)\r\n          if (\r\n            lastSign === '/' ||\r\n            lastSign === 'x' ||\r\n            lastSign === '-' ||\r\n            lastSign === '+' ||\r\n            (!n2 && !operator)\r\n          ) {\r\n            break;\r\n          }\r\n          if (percentageMode) {\r\n            calculate('%');\r\n            if (n2 && n2 < 0) {\r\n              setOperation(\r\n                (previousValue) =>\r\n                  previousValue +\r\n                  ' ' +\r\n                  operator +\r\n                  ' (- ' +\r\n                  Math.abs(n2) +\r\n                  ')%'\r\n              );\r\n            } else {\r\n              setOperation(\r\n                (previousValue) =>\r\n                  previousValue + ' ' + operator + ' ' + n2 + '%'\r\n              );\r\n            }\r\n          } else {\r\n            if (lastSign === '=' && n2) {\r\n              if (n2 < 0) {\r\n                setOperation(\r\n                  (previousValue) =>\r\n                    previousValue +\r\n                    ' ' +\r\n                    operator +\r\n                    ' (- ' +\r\n                    Math.abs(n2) +\r\n                    ')'\r\n                );\r\n              } else {\r\n                setOperation((previousValue) => {\r\n                  return previousValue + ' ' + operator + ' ' + n2;\r\n                });\r\n              }\r\n            }\r\n            if (operation.charAt(operation.length - 1) === '.') {\r\n              setOperation(operation.slice(0, -1));\r\n            }\r\n            if (String(n2).charAt(String(n2).length - 1) === '.') {\r\n              setN2(Number(String(n2).slice(0, -1)));\r\n            }\r\n            calculate();\r\n          }\r\n          break;\r\n        case '/':\r\n        case 'x':\r\n        case '-':\r\n        case '+':\r\n          // OPERATORS\r\n          if (error) {\r\n            break;\r\n          }\r\n          if (n1 === '0') {\r\n            setN1(0);\r\n            setOperator(sign);\r\n            setOperation('0 ' + sign + ' ');\r\n            break;\r\n          }\r\n          if (n2) {\r\n            setN2(null);\r\n          }\r\n\r\n          let newOperation = operation;\r\n          if (operation.charAt(operation.length - 1) === '.') {\r\n            newOperation = operation.slice(0, -1);\r\n          }\r\n          if (\r\n            lastSign === '/' ||\r\n            lastSign === 'x' ||\r\n            lastSign === '-' ||\r\n            lastSign === '+'\r\n          ) {\r\n            newOperation = operation.slice(0, -3);\r\n            setOperation(addBrackets(newOperation, sign));\r\n            setOperator(sign);\r\n            if (percentageMode) {\r\n              setPercentageMode(false);\r\n            } else {\r\n              calculate();\r\n            }\r\n            break;\r\n          }\r\n          if (n2 !== null && lastSign !== '=') {\r\n            if (percentageMode) {\r\n              setPercentageMode(false);\r\n            } else {\r\n              calculate();\r\n            }\r\n          }\r\n          setOperator(sign);\r\n          setOperation(addBrackets(newOperation, sign));\r\n          break;\r\n        default:\r\n          // NUMBERS\r\n          setPercentageMode(false);\r\n          if (error) {\r\n            setError(false);\r\n            setOperation(String(sign));\r\n            setN1(sign);\r\n            break;\r\n          }\r\n          if (\r\n            ((lastSign === '=' ||\r\n              operation.charAt(operation.length - 1) === '%') &&\r\n              n1 !== '0') ||\r\n            (lastSign === 'N' &&\r\n              operation.charAt(operation.length - 1) === ')' &&\r\n              result !== null)\r\n          ) {\r\n            setOperation(n1 + String(sign));\r\n            setN1(n1 + String(sign));\r\n            setResult(null);\r\n            setN2(null);\r\n            setOperator(null);\r\n            break;\r\n          }\r\n          if (result) {\r\n            setResult(null);\r\n            setN2(sign);\r\n            setOperation((previousValue) => {\r\n              return previousValue + sign;\r\n            });\r\n          } else if (!operator) {\r\n            if (n1 === 0 && lastSign === 0) {\r\n              break;\r\n            }\r\n            setN1((previousValue) => {\r\n              if (previousValue === '0') {\r\n                return sign;\r\n              }\r\n              return previousValue + String(sign);\r\n            });\r\n            setOperation((previousValue) => {\r\n              return previousValue + sign;\r\n            });\r\n          } else if (operator) {\r\n            if (n2 === 0) {\r\n              setN2(sign);\r\n              setOperation((previousValue) => {\r\n                return previousValue.slice(0, -1) + sign;\r\n              });\r\n            } else {\r\n              setN2((previousValue) => {\r\n                if (previousValue === null) {\r\n                  return sign;\r\n                }\r\n                return previousValue + String(sign);\r\n              });\r\n              setOperation((previousValue) => {\r\n                if (\r\n                  previousValue.charAt(previousValue.length - 1) === ')'\r\n                ) {\r\n                  return (\r\n                    previousValue.slice(0, -1) + String(sign) + ')'\r\n                  );\r\n                } else {\r\n                  return previousValue + String(sign);\r\n                }\r\n              });\r\n            }\r\n          }\r\n      }\r\n      // TO PREVENT OPERATOR DUPLICATION IN OPERATIONS\r\n      if (\r\n        ((lastSign === '/' ||\r\n          lastSign === 'x' ||\r\n          lastSign === '-' ||\r\n          lastSign === '+') &&\r\n          sign === '.') ||\r\n        ((lastSign === '/' ||\r\n          lastSign === 'x' ||\r\n          lastSign === '-' ||\r\n          lastSign === '+') &&\r\n          sign === '=') ||\r\n        ((lastSign === '/' ||\r\n          lastSign === 'x' ||\r\n          lastSign === '-' ||\r\n          lastSign === '+') &&\r\n          sign === '%') ||\r\n        ((lastSign === '/' ||\r\n          lastSign === 'x' ||\r\n          lastSign === '-' ||\r\n          lastSign === '+') &&\r\n          sign === 'N')\r\n      ) {\r\n        setLastSign('+');\r\n      } else if (lastSign === '=' && sign === '%') {\r\n        setLastSign('=');\r\n      } else {\r\n        setLastSign(sign);\r\n      }\r\n    } catch (err) {\r\n      setError(err.message);\r\n      setPercentageMode(false);\r\n      setN1('0');\r\n      setN2(null);\r\n      setOperation('');\r\n      setOperator(null);\r\n      setResult(null);\r\n    }\r\n  };\r\n\r\n  const calculate = (operatorArg) => {\r\n    let result;\r\n    if (operatorArg === '%') {\r\n      if (operator === '+') {\r\n        result = +n1 + (n2 / 100) * n1;\r\n        result =\r\n          Math.round((result + Number.EPSILON) * 1000000000) /\r\n          1000000000;\r\n      } else if (operator === '-') {\r\n        result = +n1 - (n2 / 100) * n1;\r\n        result =\r\n          Math.round((result + Number.EPSILON) * 1000000000) /\r\n          1000000000;\r\n      } else if (operator === 'x') {\r\n        result = +n1 * (n2 / 100);\r\n        result =\r\n          Math.round((result + Number.EPSILON) * 1000000000) /\r\n          1000000000;\r\n      } else if (operator === '/') {\r\n        if (Number(n2) === 0) {\r\n          throw new Error('Cannot divide by 0!');\r\n        }\r\n        result = +n1 / (n2 / 100);\r\n        result =\r\n          Math.round((result + Number.EPSILON) * 1000000000) /\r\n          1000000000;\r\n      }\r\n      setN1(result);\r\n      setResult(result);\r\n    } else if (n2 !== null && operator) {\r\n      switch (operator) {\r\n        case '/':\r\n          if (Number(n2) === 0) {\r\n            throw new Error('Cannot divide by 0!');\r\n          }\r\n          result =\r\n            +Math.round((+n1 / +n2 + Number.EPSILON) * 1000000000) /\r\n            1000000000;\r\n          setN1(result);\r\n          setResult(result);\r\n          break;\r\n        case 'x':\r\n          result =\r\n            +Math.round((+n1 * +n2 + Number.EPSILON) * 1000000000) /\r\n            1000000000;\r\n          setN1(result);\r\n          setResult(result);\r\n          break;\r\n        case '-':\r\n          result =\r\n            +Math.round((+n1 - +n2 + Number.EPSILON) * 1000000000) /\r\n            1000000000;\r\n          setN1(result);\r\n          setResult(result);\r\n          break;\r\n        case '+':\r\n        default:\r\n          result =\r\n            +Math.round((+n1 + +n2 + Number.EPSILON) * 1000000000) /\r\n            1000000000;\r\n          setN1(result);\r\n          setResult(result);\r\n      }\r\n    } else {\r\n      result = n1;\r\n      setResult(n1);\r\n    }\r\n    return result;\r\n  };\r\n\r\n  return (\r\n    <div className=\"calculator\">\r\n      <div className=\"calculator__result\">\r\n        <div className=\"calculator__operation\">\r\n          {error ? error : operation}\r\n        </div>\r\n        <div className=\"calculator__result-value\">\r\n          {result !== null ? result : n2 ? n2 : n1}\r\n        </div>\r\n      </div>\r\n      <div className=\"calculator__controls\">\r\n        <Control\r\n          onClick={() => actionHandler('%')}\r\n          modifier=\"basic\"\r\n          title=\"%\"\r\n        />\r\n        <Control\r\n          onClick={() => actionHandler('N')}\r\n          modifier=\"basic\"\r\n          title={\r\n            <div className=\"negation\">\r\n              <div className=\"negation__up\">+</div>\r\n              <div>/</div>\r\n              <div className=\"negation__down\">-</div>\r\n            </div>\r\n          }\r\n        />\r\n        <Control\r\n          onClick={() => actionHandler('C')}\r\n          modifier=\"basic\"\r\n          title=\"C\"\r\n        />\r\n        <Control\r\n          onClick={() => actionHandler('/')}\r\n          modifier=\"violet-1\"\r\n          title=\"/\"\r\n        />\r\n        <Control\r\n          onClick={() => actionHandler(7)}\r\n          modifier=\"basic\"\r\n          title=\"7\"\r\n        />\r\n        <Control\r\n          onClick={() => actionHandler(8)}\r\n          modifier=\"basic\"\r\n          title=\"8\"\r\n        />\r\n        <Control\r\n          onClick={() => actionHandler(9)}\r\n          modifier=\"basic\"\r\n          title=\"9\"\r\n        />\r\n        <Control\r\n          onClick={() => actionHandler('x')}\r\n          modifier=\"violet-2\"\r\n          title=\"x\"\r\n        />\r\n        <Control\r\n          onClick={() => actionHandler(4)}\r\n          modifier=\"basic\"\r\n          title=\"4\"\r\n        />\r\n        <Control\r\n          onClick={() => actionHandler(5)}\r\n          modifier=\"basic\"\r\n          title=\"5\"\r\n        />\r\n        <Control\r\n          onClick={() => actionHandler(6)}\r\n          modifier=\"basic\"\r\n          title=\"6\"\r\n        />\r\n        <Control\r\n          onClick={() => actionHandler('-')}\r\n          modifier=\"violet-3\"\r\n          title=\"-\"\r\n        />\r\n        <Control\r\n          onClick={() => actionHandler(1)}\r\n          modifier=\"basic\"\r\n          title=\"1\"\r\n        />\r\n        <Control\r\n          onClick={() => actionHandler(2)}\r\n          modifier=\"basic\"\r\n          title=\"2\"\r\n        />\r\n        <Control\r\n          onClick={() => actionHandler(3)}\r\n          modifier=\"basic\"\r\n          title=\"3\"\r\n        />\r\n        <Control\r\n          onClick={() => actionHandler('+')}\r\n          modifier=\"violet-4\"\r\n          title=\"+\"\r\n        />\r\n        <Control\r\n          onClick={() => actionHandler(0)}\r\n          modifier=\"basic\"\r\n          title=\"0\"\r\n        />\r\n        <Control\r\n          onClick={() => actionHandler('.')}\r\n          modifier=\"basic\"\r\n          title=\",\"\r\n        />\r\n        <Control\r\n          onClick={() => actionHandler('=')}\r\n          modifier=\"pink\"\r\n          title=\"=\"\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Calculator;\r\n","import React from 'react';\n\nimport Calculator from './components/Calculator';\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <Calculator />\n      <div className=\"app__caption\">\n        Calculator by{' '}\n        <a\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          href=\"http://samuelk.pl/\"\n          className=\"link\"\n        >\n          Samuel Kędziora\n        </a>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './sass/main.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}